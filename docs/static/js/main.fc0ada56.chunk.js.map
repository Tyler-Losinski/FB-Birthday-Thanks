{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["fbData","user","message","App","react_default","a","createElement","build","style","paddingTop","className","md","map","item","i","textAlign","href","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qPAGMA,EAAS,CACb,CACEC,KAAQ,+BACRC,QAAW,8BAEb,CACED,KAAQ,oCACRC,QAAW,sCAEb,CACED,KAAQ,gCACRC,QAAW,wBAEb,CACED,KAAQ,+BACRC,QAAW,yGAEb,CACED,KAAQ,gCACRC,QAAW,2BAEb,CACED,KAAQ,iCACRC,QAAW,mBAEb,CACED,KAAQ,gCACRC,QAAW,mBAEb,CACED,KAAQ,qCACRC,QAAW,wBAEb,CACED,KAAQ,oCACRC,QAAW,0BAEb,CACED,KAAQ,gCACRC,QAAW,8DAEb,CACED,KAAQ,kCACRC,QAAW,qCAEb,CACED,KAAQ,kCACRC,QAAW,2BAEb,CACED,KAAQ,iCACRC,QAAW,mBAEb,CACED,KAAQ,8BACRC,QAAW,yBAEb,CACED,KAAQ,mCACRC,QAAW,0BAEb,CACED,KAAQ,wCACRC,QAAW,oFAEb,CACED,KAAQ,0CACRC,QAAW,qBAEb,CACED,KAAQ,2CACRC,QAAW,0BAEb,CACED,KAAQ,mCACRC,QAAW,2BAEb,CACED,KAAQ,gCACRC,QAAW,qBAEb,CACED,KAAQ,iCACRC,QAAW,oBAEb,CACED,KAAQ,oCACRC,QAAW,0BAEb,CACED,KAAQ,qCACRC,QAAW,sDAEb,CACED,KAAQ,kCACRC,QAAW,mBAEb,CACED,KAAQ,kCACRC,QAAW,oBAEb,CACED,KAAQ,iCACRC,QAAW,0BAEb,CACED,KAAQ,mCACRC,QAAW,uBAyCAC,mLAnCX,OACEC,EAAAC,EAAAC,cAACC,EAAA,UAAD,CAAWC,MAAO,CAAEC,WAAY,KAC9BL,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGI,UAAU,wBAAjB,iBACAN,EAAAC,EAAAC,cAAA,oCAGFF,EAAAC,EAAAC,cAACC,EAAA,IAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,IAAD,CAAKI,GAAI,IACPP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,wBACbN,EAAAC,EAAAC,cAAA,MAAII,UAAU,SAAd,iBACDV,EAAOY,IAAI,SAACC,EAAKC,GAChB,OACEV,EAAAC,EAAAC,cAAA,OAAKI,UAAWI,EAAI,IAAM,EAAI,gBAAgB,iBAAmBN,MAAO,CAACO,UAAWD,EAAI,IAAM,EAAI,OAAO,UACvGV,EAAAC,EAAAC,cAAA,OAAKI,UAAWI,EAAI,IAAM,EAAI,oBAAoB,sBAChDV,EAAAC,EAAAC,cAAA,SAAIO,EAAKX,SACTE,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAACO,UAAW,UAAW,IAAIF,EAAKZ,WAMlDG,EAAAC,EAAAC,cAAA,UAAQI,UAAU,UAChBN,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,KAAGU,KAAK,4CAAR,kCA3BEC,aCrGEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOpB,EAAAC,EAAAC,cAACmB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.fc0ada56.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-grid-system';\n\nconst fbData = [\n  {\n    \"user\": \"‎Lucas Holmes‎ \",\n    \"message\": \" HAPPY (belated) BIRTHDAY!\"\n  },\n  {\n    \"user\": \"‎Stephanie Gerving‎ \",\n    \"message\": \" Happy Birthday Tyler!🍕\"\n  },\n  {\n    \"user\": \"‎Teresa Steele‎ \",\n    \"message\": \" Happy Birthday Bro!\"\n  },\n  {\n    \"user\": \"‎Jenna Radtke‎ \",\n    \"message\": \" Happy birthday Chaka!! It’s a good day to have a birthday! 🎉😁😁\"\n  },\n  {\n    \"user\": \"‎Abbey Ruhland‎ \",\n    \"message\": \" Happy birthday, Tyler!\"\n  },\n  {\n    \"user\": \"‎Steven Qualley‎ \",\n    \"message\": \" Happy birthday\"\n  },\n  {\n    \"user\": \"‎Carla Siebert‎ \",\n    \"message\": \" Happy Birthday\"\n  },\n  {\n    \"user\": \"‎Fr. Keith Streifel‎ \",\n    \"message\": \" Birthday blessings!\"\n  },\n  {\n    \"user\": \"‎KevinandLori Suda‎ \",\n    \"message\": \" Happy Birthday Tyler!\"\n  },\n  {\n    \"user\": \"‎Katie Ueckert‎ \",\n    \"message\": \" HAPPY BIRTHDAY TYLER!!!! I hope your day is wonderful!!!!\"\n  },\n  {\n    \"user\": \"‎Brody Hagemeier‎ \",\n    \"message\": \" Have an awesome birthday, Tyler!\"\n  },\n  {\n    \"user\": \"‎Vanessa Ueckert‎ \",\n    \"message\": \" Happy birthday Tyler!!\"\n  },\n  {\n    \"user\": \"‎Steven Qualley‎ \",\n    \"message\": \" Happy birthday\"\n  },\n  {\n    \"user\": \"‎Joel Schrum‎ \",\n    \"message\": \" Happy Birthday Dude!\"\n  },\n  {\n    \"user\": \"‎Michael Dettloff‎ \",\n    \"message\": \" Happy birthday Tyler!\"\n  },\n  {\n    \"user\": \"‎Swenda Thorson Braden‎ \",\n    \"message\": \" Happy Birthday Blessings Tyler 🎂😇🎉😎\"\n  },\n  {\n    \"user\": \"‎Abigail Margaret Louise‎ \",\n    \"message\": \" Happy Birthday!!\"\n  },\n  {\n    \"user\": \"‎Janine Westphal Perrault‎ \",\n    \"message\": \" Happy Birthday Tyler!\"\n  },\n  {\n    \"user\": \"‎Joshua Schwebach‎ \",\n    \"message\": \" Happy Birthday Tyler!!\"\n  },\n  {\n    \"user\": \"‎Austin Bagley‎ \",\n    \"message\": \" Happy birthday!!\"\n  },\n  {\n    \"user\": \"‎James LaPlante‎ \",\n    \"message\": \" Happy birthday!\"\n  },\n  {\n    \"user\": \"‎Emma Hergenroeder‎ \",\n    \"message\": \" Happy birthday Tyler!\"\n  },\n  {\n    \"user\": \"‎Timothy A. Alvarez‎ \",\n    \"message\": \" Happy birthday Tyler! Hope your day is amazing :)\"\n  },\n  {\n    \"user\": \"‎Mathew Walworth‎ \",\n    \"message\": \" Happy Birthday\"\n  },\n  {\n    \"user\": \"‎Amy Littlecreek‎ \",\n    \"message\": \" Happy birthday!\"\n  },\n  {\n    \"user\": \"‎Colter Braaten‎ \",\n    \"message\": \" Happy birthday Chaka!\"\n  },\n  {\n    \"user\": \"‎Katie Wesolowski‎ \",\n    \"message\": \" Happy Birthday!!!\"\n  }\n]\nclass App extends Component {\n  render() {\n    //const data = JSON.parse(fbData);\n    return (\n      <Container style={{ paddingTop: 20 }}>\n        <header>\n          <h1><i className=\"icon heart is-large\"></i>Thanks Homies</h1>\n          <p>Enjoy the Retro Theme.</p>\n        </header>\n\n        <Row>\n          <Col md={12}>\n            <div className=\"container with-title\">\n              <h2 className=\"title\">Chaka's Peeps</h2>\n            {fbData.map((item,i) => {\n              return( \n                <div className={i % 2 === 0 ? \"message -left\":\"message -right\"}  style={{textAlign: i % 2 === 0 ? \"left\":\"right\"}}>\n                  <div className={i % 2 === 0 ? \"balloon from-left\":\"balloon from-right\"}>\n                    <p>{item.message}</p>\n                    <p style={{textAlign: \"right\"}}>{'-'+item.user}</p>\n                  </div>\n                </div>\n            )              \n            })}\n            </div>\n            <footer className=\"footer\">\n              <p>\n                <a href=\"https://github.com/nostalgic-css/NES.css\">Theme by B.C.Rikko</a>\n              </p>\n            </footer>\n          </Col>\n        </Row>\n      </Container>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}